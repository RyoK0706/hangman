#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sun Nov 10 19:05:52 2019

@author: katayamaryotaro
"""

#Cory Althoff Chapter 10 Challenge
#Hanged man
"""
def hangman(word):
    wrong = 0
    stages = ["",
              "_____________           ",
              "|                       ",
              "|            |          ",
              "|            0          ",
              "|           /|\         ",
              "|           / \         ",
              "|                       "
              ]
    rletters = list(word)
    board = ["_"] * len(word)
    win = False
    print("ハングマンへようこそ！")

    while wrong < len(stages) -1 :
        print("\n")
        msg = "1文字を予想してね"
        char = input(msg)
        if char in rletters:
            cind = rletters.index(char)
            board[cind] = char
            rletters[cind] = "$"
        else:
            wrong += 1
        print(" ".join(board))
        e = wrong + 1
        print("\n".join(stages[0:e]))
        if "_" not in board:
            print("あなたの勝ち！")
            print(" ".join(board))
            win = True
            break

        if not win:
            print("\n".join(stages[0:wrong+1]))
            print("あなたの負け！正解は{}。".format(word))

hangman("cat")
"""

import random
word_list = ["lion", "tiger", "puma"]

def hangman(word):
    wrong = 0
    stages = ["",
             "________        ",
             "|               ",
             "|        |      ",
             "|        0      ",
             "|       /|\     ",
             "|       / \     ",
             "|               "
              ]
    rletters = list(word)
    board = ["__"] * len(word)
    win = False
    print("Welcome to Hangman")
    while wrong < len(stages) - 1:
        print("\n")
        msg = "Guess a letter:"
        char = input(msg)
        if char in rletters:
            cind = rletters \
                   .index(char)
            board[cind] = char
            rletters[cind] = '$'
        else:
            wrong += 1
        print((" ".join(board)))
        e = wrong + 1
        print("\n"
              .join(stages[0: e]))
        if "__" not in board:
            print("You win!")
            print(" ".join(board))
            win = True
            break
    if not win:
        print("\n"
              .join(stages[0: \
              wrong]))
        print("You lose! It was {}."
              .format(word))

hangman(random.choice(word_list))

#チャレンジ：答えの単語をリストからランダムに選ぶように変更する
"""
hangman("cat")
"""
#元は上記

"""
word_list = ["Python", "Java", "computer", "hacker", "painter"]
    random_number = random.randint(0, 4)
    word = word_list[random_number]
"""
#模範解答はdefのなかで上記を設定し、呼び出す時はhangman()のみ。全て変数のなかに収めている。
#randomライブラリは使用するが、リストの番号をインデックスとして利用している。